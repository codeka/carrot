apply plugin: 'java'
apply plugin: 'jacoco'
apply from: 'deploy.gradle'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'com.google.code.findbugs:jsr305:3.0.1'
    compileOnly 'org.json:json:20170516'
    testCompile 'junit:junit:4.12'
    testCompile 'org.dmfs:iterators:1.5'
    testCompile 'com.google.truth:truth:0.31'
    testCompile 'org.json:json:20170516'
}

sourceSets {
    docs {
        java {
        }
        compileClasspath += main.output
        runtimeClasspath += main.output
    }
}

targetCompatibility = '1.7'
sourceCompatibility = '1.7'

task carrotJar(type: Jar) {
}

artifacts {
    archives carrotJar
}

task buildJavadoc(type: Javadoc) {
    source = sourceSets.main.allJava
    classpath = sourceSets.main.compileClasspath
    options.noTimestamp = true
    options.docTitle = "Carrot"
    options.windowTitle = "Carrot Javadoc"
}

jacocoTestReport {
    reports {
        xml.enabled = true
        html.enabled = true
    }
}

task compileBuildDocs(dependsOn: ['classes'], type: JavaCompile) {
    source = sourceSets.docs.java.srcDirs
    classpath = sourceSets.docs.compileClasspath
    destinationDir = sourceSets.docs.output.classesDirs.singleFile
}

task buildDocs(dependsOn: ['compileBuildDocs', 'buildJavadoc'], type: JavaExec) {
    logging.captureStandardOutput LogLevel.INFO
    inputs.files file("src/docs/html"), sourceSets.docs.output.files
    outputs.files file("$buildDir/docs")
    main "au.com.codeka.carrot.BuildDocs"
    classpath = sourceSets.main.runtimeClasspath + files(sourceSets.docs.output.classesDirs)
    args file("src/docs/html").absolutePath, file("$buildDir/docs").absolutePath
}

// Make sure the check task (that travis runs) depends on Jacoco
check.dependsOn jacocoTestReport
